{"version":3,"file":"previewimageselect/dist/scripts/previewimageselect.js","mappings":"+GAAA,eAKA,gBAgDE,WAAAA,CAA6BC,G,cAAA,KAAAA,UAAAA,EAC3BC,KAAKC,eAAiBF,EAAUG,cAAc,oCAC9CF,KAAKG,MAAiD,QAAzC,EAAmB,QAAnB,EAAAH,KAAKC,sBAAc,eAAEC,cAAc,cAAM,QAAI,KAC1DF,KAAKI,UAAmD,QAAvC,EAAmB,QAAnB,EAAAJ,KAAKC,sBAAc,eAAEC,cAAc,YAAI,QAAI,KAC5DF,KAAKK,UAAYN,EAAUO,iBAAiB,oCAC5CN,KAAKO,OAASR,EAAUG,cAAc,mCACtCF,KAAKQ,UAAYT,EAAUG,cAAc,sCACzCF,KAAKS,MAAQV,EAAUG,cAAc,8BAEvB,QAAd,EAAAF,KAAKQ,iBAAS,SAAEE,iBAAiB,SAAUC,GAAMX,KAAKY,WACtDZ,KAAKK,UAAUQ,SAASC,I,QACtB,MAAMC,EAAWD,EACXE,EAAyC,QAA9B,EAAAD,EAASb,cAAc,eAAO,eAAEe,YAC3CC,EAAmC,QAA7B,EAAAH,EAASb,cAAc,cAAM,eAAEiB,aAAa,OACxDJ,EAASL,iBAAiB,SAAUC,GAAMX,KAAKoB,IAAI,IAAI,UAAuBJ,EAAUE,KAAM,GAElG,CAOO,GAAAE,CAAKN,G,UACA,QAAV,EAAAd,KAAKG,aAAK,SAAEkB,aAAa,MAAOP,EAAKI,KAC3B,QAAV,EAAAlB,KAAKS,aAAK,SAAEY,aAAa,QAASP,EAAKE,UACzB,QAAd,EAAAhB,KAAKQ,iBAAS,SAAEc,UAAUV,OAAO,UAEV,OAAnBZ,KAAKI,YACPJ,KAAKI,UAAUa,YAAcH,EAAKE,UAGhB,OAAhBhB,KAAKO,SACPP,KAAKO,OAAOU,YAAcM,MAAMC,EAAE,oBAAqB,WAE3D,CAMO,MAAAZ,G,UACK,QAAV,EAAAZ,KAAKG,aAAK,SAAEkB,aAAa,MAAO,IACtB,QAAV,EAAArB,KAAKS,aAAK,SAAEY,aAAa,QAAS,IACpB,QAAd,EAAArB,KAAKQ,iBAAS,SAAEc,UAAUG,IAAI,UAEP,OAAnBzB,KAAKI,YACPJ,KAAKI,UAAUa,YAAcM,MAAMC,EAAE,oBAAqB,aAGxC,OAAhBxB,KAAKO,SACPP,KAAKO,OAAOU,YAAcM,MAAMC,EAAE,oBAAqB,OAE3D,E,+DCvGF,gBACE,WAAA1B,CAA6BkB,EAAkCE,GAAlC,KAAAF,SAAAA,EAAkC,KAAAE,IAAAA,CAAc,E,GCH3EQ,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAKH,IACH,oBAAXI,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeP,EAASI,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,GAAO,E,MCL9D,eACA,OAEAC,SAASlC,iBAAiB,+BACvBO,SAASd,GAAc,IAAI,UAAmBA,I","sources":["webpack://craft-content-templates/./src/web/assets/previewimageselect/src/scripts/PreviewImageSelect.ts","webpack://craft-content-templates/./src/web/assets/previewimageselect/src/scripts/PreviewImageSelectItem.ts","webpack://craft-content-templates/webpack/bootstrap","webpack://craft-content-templates/webpack/runtime/make namespace object","webpack://craft-content-templates/./src/web/assets/previewimageselect/src/scripts/main.ts"],"sourcesContent":["import PreviewImageSelectItem from './PreviewImageSelectItem'\n\n/**\n * Class for managing the selected preview image for a content template.\n */\nexport default class PreviewImageSelect {\n  /**\n   * Container for the display of the set preview image.\n   * @public\n   */\n  public readonly imageContainer: Element|null\n\n  /**\n   * Image for the display of the set preview image.\n   * @public\n   */\n  public readonly image: Element|null\n\n  /**\n   * Text (filename) for the display of the set preview image.\n   * @public\n   */\n  public readonly imageText: Element|null\n\n  /**\n   * Preview images that can be selected from the menu.\n   * @public\n   */\n  public readonly menuItems: NodeListOf<Element>\n\n  /**\n   * The button for setting the preview image.\n   * @public\n   */\n  public readonly btnSet: Element|null\n\n  /**\n   * The button for unsetting the preview image.\n   * @public\n   */\n  public readonly btnRemove: Element|null\n\n  /**\n   * The hidden input for the element editor form.\n   * @public\n   */\n  public readonly input: Element|null\n\n  /**\n   * The constructor.\n   * @param container - The preview image field container.\n   * @public\n   */\n  constructor (public readonly container: Element) {\n    this.imageContainer = container.querySelector('[data-preview-image-select-show]')\n    this.image = this.imageContainer?.querySelector('img') ?? null\n    this.imageText = this.imageContainer?.querySelector('p') ?? null\n    this.menuItems = container.querySelectorAll('[data-preview-image-select-item]')\n    this.btnSet = container.querySelector('[data-preview-image-select-set]')\n    this.btnRemove = container.querySelector('[data-preview-image-select-remove]')\n    this.input = container.querySelector('input[name=\"previewImage\"]')\n\n    this.btnRemove?.addEventListener('click', (_) => this.remove())\n    this.menuItems.forEach((item) => {\n      const htmlItem = item as HTMLElement\n      const filename = htmlItem.querySelector('span')?.textContent as string\n      const url = htmlItem.querySelector('img')?.getAttribute('src') as string\n      htmlItem.addEventListener('click', (_) => this.set(new PreviewImageSelectItem(filename, url)))\n    })\n  }\n\n  /**\n   * Sets the selected preview image.\n   * @param item - A `PreviewImageSelectItem` representing the selected preview image\n   * @public\n   */\n  public set (item: PreviewImageSelectItem): void {\n    this.image?.setAttribute('src', item.url)\n    this.input?.setAttribute('value', item.filename)\n    this.btnRemove?.classList.remove('hidden')\n\n    if (this.imageText !== null) {\n      this.imageText.textContent = item.filename\n    }\n\n    if (this.btnSet !== null) {\n      this.btnSet.textContent = Craft.t('content-templates', 'Replace')\n    }\n  }\n\n  /**\n   * Unsets the preview image.\n   * @public\n   */\n  public remove (): void {\n    this.image?.setAttribute('src', '')\n    this.input?.setAttribute('value', '')\n    this.btnRemove?.classList.add('hidden')\n\n    if (this.imageText !== null) {\n      this.imageText.textContent = Craft.t('content-templates', 'None set')\n    }\n\n    if (this.btnSet !== null) {\n      this.btnSet.textContent = Craft.t('content-templates', 'Add')\n    }\n  }\n}\n","/**\n * Represents a preview image item that can be set for a content template.\n */\nexport default class PreviewImageSelectItem {\n  constructor (public readonly filename: string, public readonly url: string) {}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import PreviewImageSelect from './PreviewImageSelect'\nimport '../styles/main.scss'\n\ndocument.querySelectorAll('[data-preview-image-select]')\n  .forEach((container) => new PreviewImageSelect(container))\n"],"names":["constructor","container","this","imageContainer","querySelector","image","imageText","menuItems","querySelectorAll","btnSet","btnRemove","input","addEventListener","_","remove","forEach","item","htmlItem","filename","textContent","url","getAttribute","set","setAttribute","classList","Craft","t","add","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","document"],"sourceRoot":""}